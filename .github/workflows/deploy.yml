name: 部署到腾讯云服务器
on:
  # 允许手动触发部署
  workflow_dispatch:
# 设置权限
permissions:
  contents: read
jobs:
  deploy:
    name: 构建并部署到服务器
    runs-on: ubuntu-latest
    steps:
      # 1. 检出代码
      - name: 📦 检出代码
        uses: actions/checkout@v4
      # 2. 设置 Node.js
      - name: 🔧 设置 Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
      # 3. 安装 pnpm
      - name: 📥 安装 pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9
      # 4. 获取 pnpm store 目录
      - name: 🗂️ 获取 pnpm store 目录
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      # 5. 缓存依赖
      - name: 💾 缓存 pnpm 依赖
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      # 6. 安装依赖
      - name: 📦 安装项目依赖
        run: pnpm install --no-frozen-lockfile

      # 7. 构建生产版本
      - name: 🏗️ 构建生产版本
        run: NODE_OPTIONS="--max-old-space-size=6144" pnpm run build:prod

      # 8. 验证构建产物
      - name: ✅ 验证构建产物
        run: |
          if [ ! -d "dist-prod" ]; then
            echo "❌ 错误：dist-prod 目录不存在，构建可能失败了"
            exit 1
          fi
          echo "✅ dist-prod 目录存在"
          ls -la dist-prod/
      
      # 9. 打包构建产物
      - name: 📦 打包构建产物
        run: |
          cd dist-prod
          tar -czf ../dist.tar.gz .
          cd ..
          echo "✅ 打包完成: dist.tar.gz"
          ls -lh dist.tar.gz

      # 10. 上传到 GitHub 作为 Artifact
      - name: 📤 上传构建产物
        uses: actions/upload-artifact@v4
        with:
          name: dist-prod
          path: dist-prod/
          retention-days: 1

      # 11. 部署到服务器（改为直接触发服务器构建）
      - name: 🚀 部署到腾讯云服务器
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            echo "🚀 开始部署..."
            
            # 进入项目目录
            cd ${{ secrets.SERVER_PROJECT_DIR }}
            
            # 拉取最新代码
            echo "📥 拉取最新代码..."
            git pull origin master
            
            # 安装依赖
            echo "📦 安装依赖..."
            pnpm install
            
            # 构建项目
            echo "🏗️ 构建生产版本..."
            NODE_OPTIONS="--max-old-space-size=6144" pnpm run build:prod
            
            # 复制到网站目录
            echo "📂 复制到网站目录..."
            cp -r dist-prod/* ${{ secrets.SERVER_TARGET }}/
            
            echo "✅ 部署完成！"

      # 12. 部署成功通知
      - name: ✅ 部署成功
        run: |
          echo "🎉 部署成功！"
          echo "访问地址: http://${{ secrets.SERVER_HOST }}"
